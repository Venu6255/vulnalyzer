"""initial migration - create tables

Revision ID: 86993e1fa1f4
Revises: 
Create Date: 2025-08-23 00:14:20.449195

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '86993e1fa1f4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('system_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('total_scans', sa.Integer(), nullable=True),
    sa.Column('completed_scans', sa.Integer(), nullable=True),
    sa.Column('failed_scans', sa.Integer(), nullable=True),
    sa.Column('total_vulnerabilities', sa.Integer(), nullable=True),
    sa.Column('critical_vulns', sa.Integer(), nullable=True),
    sa.Column('high_vulns', sa.Integer(), nullable=True),
    sa.Column('medium_vulns', sa.Integer(), nullable=True),
    sa.Column('low_vulns', sa.Integer(), nullable=True),
    sa.Column('active_users', sa.Integer(), nullable=True),
    sa.Column('new_users', sa.Integer(), nullable=True),
    sa.Column('unique_targets', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('system_stats', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_system_stats_date'), ['date'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=True),
    sa.Column('full_name', sa.String(length=200), nullable=True),
    sa.Column('avatar', sa.String(length=200), nullable=True),
    sa.Column('organization', sa.String(length=200), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('locked_until', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('total_scans', sa.Integer(), nullable=True),
    sa.Column('total_vulnerabilities_found', sa.Integer(), nullable=True),
    sa.Column('email_notifications', sa.Boolean(), nullable=True),
    sa.Column('scan_notifications', sa.Boolean(), nullable=True),
    sa.Column('theme_preference', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_role'), ['role'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('endpoint', sa.String(length=200), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_audit_logs_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_user_id'), ['user_id'], unique=False)

    op.create_table('scan_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('target_url', sa.String(length=500), nullable=False),
    sa.Column('scan_type', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('scan_duration', sa.Float(), nullable=True),
    sa.Column('total_vulnerabilities', sa.Integer(), nullable=True),
    sa.Column('critical_count', sa.Integer(), nullable=True),
    sa.Column('high_count', sa.Integer(), nullable=True),
    sa.Column('medium_count', sa.Integer(), nullable=True),
    sa.Column('low_count', sa.Integer(), nullable=True),
    sa.Column('info_count', sa.Integer(), nullable=True),
    sa.Column('max_depth', sa.Integer(), nullable=True),
    sa.Column('delay_between_requests', sa.Float(), nullable=True),
    sa.Column('selected_plugins', sa.JSON(), nullable=True),
    sa.Column('pages_crawled', sa.Integer(), nullable=True),
    sa.Column('urls_discovered', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.String(length=100), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('current_operation', sa.String(length=200), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('scan_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_scan_history_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_scan_history_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_scan_history_target_url'), ['target_url'], unique=False)
        batch_op.create_index(batch_op.f('ix_scan_history_task_id'), ['task_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_scan_history_user_id'), ['user_id'], unique=False)

    op.create_table('vulnerabilities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scan_id', sa.Integer(), nullable=False),
    sa.Column('vuln_type', sa.String(length=100), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('confidence', sa.String(length=20), nullable=True),
    sa.Column('url', sa.String(length=1000), nullable=True),
    sa.Column('method', sa.String(length=10), nullable=True),
    sa.Column('parameter', sa.String(length=200), nullable=True),
    sa.Column('endpoint', sa.String(length=500), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('impact', sa.Text(), nullable=True),
    sa.Column('remediation', sa.Text(), nullable=True),
    sa.Column('payload', sa.Text(), nullable=True),
    sa.Column('evidence', sa.Text(), nullable=True),
    sa.Column('request_data', sa.JSON(), nullable=True),
    sa.Column('response_data', sa.JSON(), nullable=True),
    sa.Column('cwe_id', sa.String(length=20), nullable=True),
    sa.Column('owasp_category', sa.String(length=50), nullable=True),
    sa.Column('cvss_score', sa.Float(), nullable=True),
    sa.Column('references', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.Column('false_positive', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['scan_id'], ['scan_history.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('vulnerabilities', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_vulnerabilities_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_vulnerabilities_scan_id'), ['scan_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_vulnerabilities_severity'), ['severity'], unique=False)
        batch_op.create_index(batch_op.f('ix_vulnerabilities_url'), ['url'], unique=False)
        batch_op.create_index(batch_op.f('ix_vulnerabilities_vuln_type'), ['vuln_type'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('vulnerabilities', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_vulnerabilities_vuln_type'))
        batch_op.drop_index(batch_op.f('ix_vulnerabilities_url'))
        batch_op.drop_index(batch_op.f('ix_vulnerabilities_severity'))
        batch_op.drop_index(batch_op.f('ix_vulnerabilities_scan_id'))
        batch_op.drop_index(batch_op.f('ix_vulnerabilities_created_at'))

    op.drop_table('vulnerabilities')
    with op.batch_alter_table('scan_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_scan_history_user_id'))
        batch_op.drop_index(batch_op.f('ix_scan_history_task_id'))
        batch_op.drop_index(batch_op.f('ix_scan_history_target_url'))
        batch_op.drop_index(batch_op.f('ix_scan_history_status'))
        batch_op.drop_index(batch_op.f('ix_scan_history_created_at'))

    op.drop_table('scan_history')
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_audit_logs_user_id'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_timestamp'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_action'))

    op.drop_table('audit_logs')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_role'))
        batch_op.drop_index(batch_op.f('ix_users_is_active'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('system_stats', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_system_stats_date'))

    op.drop_table('system_stats')
    # ### end Alembic commands ###
